[user]
    name = Miroslav Shubernetskiy
    email = miroslav@miki725.com
[include]
    path = .gitconfig.user
    path = .gitconfig.diff
[filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true
[alias]
    add-unmerged = "!git add `git diff --name-only --diff-filter=U`"
    amend = "!git commit -a --amend"
    amendp = "!git amend && git pushf"
    ammend = "!git amend"
    ammendp = "!git amendp"
    branch-name = "!git rev-parse --abbrev-ref HEAD"
    branches = "!git branch --format='%(refname:lstrip=2)'"
    branches-clean = "!git branch --merged | grep -E -v \"(^\\*|master|main|dev)\" | xargs --no-run-if-empty git branch -d"
    branches-purge = "!git for-each-ref --format '%(refname:short) %(upstream:track)' refs/heads | grep gone | awk '{print $1}' | xargs --no-run-if-empty git branch -D"
    branches-rebase = "!for i in $(git branches); do git rebase `git default-branch` $i || git rebase --abort; done;"
    cdiff = "!git diff --cached"
    commit-id = "!git --no-pager log -n1 --pretty=format:%H%n"
    default-branch = "!git branches | grep \"^`git config init.defaultBranch`$\" || git branches | grep -E '^main$' || git branches | grep -E '^master$'"
    edit-unmerged = "!$EDITOR -p `git diff --name-only --diff-filter=U`"
    fetch-prune = "!git fetch --all --prune --prune-tags"
    latest = "!git checkout `git default-branch` && git fetch-prune && git rebase origin/`git default-branch` && git branches-clean"
    log-merges = "!git log --first-parent --pretty='format:%aD    %h    %an    %s'"
    pullf = "!git fetch-prune && git reset --hard origin/`git branch-name`"
    pushf = "!git push origin +`git branch-name`"
    pushu = "!git push origin `git branch-name` -u"
    renew = "!git fetch-prune && git rebase origin/`git branch-name`"
    undo = "!git reset --soft HEAD~1"
    update = "!git fetch-prune && git rebase origin/`git default-branch`"
[rerere]
    enabled = true
[diff]
    noprefix = true
[pull]
    rebase = false
[init]
    templateDir = ~/.git-template
	defaultBranch = main
[commit]
    template = ~/.gitcommit
